C51 COMPILER V9.51   STATION                                                               09/08/2018 12:31:38 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE STATION
OBJECT MODULE PLACED IN Station.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe Station.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          #include "compiler_defs.h"
   2          #include "C8051F340_defs.h"
   3          #include <communication.h>
   4          //-----------------------------------------------------------------------------
   5          // Global CONSTANTS
   6          //-----------------------------------------------------------------------------
   7          
   8          #define SYSCLK      12000000           // SYSCLK frequency in Hz
   9          #define BAUDRATE      9600           // Baud rate of UART in bps
  10          
  11          
  12          //-----------------------------------------------------------------------------
  13          // Function PROTOTYPES
  14          //-----------------------------------------------------------------------------
  15          
  16          void SYSCLK_Init (void);
  17          void UART0_Init (void);
  18          void PORT_Init (void);
  19          void UART1_Init (void);
  20          
  21          void Delay(float DTime);
  22          void AccessTablet(ETabletCommand Command);
  23          void Init_Device(void);
  24          
  25          void Timer2_Init();
  26          void putchar(unsigned char cData);
  27          
  28          
  29          xdata TPacker Packer ;
  30          unsigned char RxTimeOutCount=0; // UART 接收超時時間設定
  31          unsigned char RxTimeOutCountTimer3 = 0;// UART 接收超時時間設定
  32          unsigned char *Pointer_Packer = &Packer.UART_Mark;
  33          unsigned char *CasetPointer_Packer = &Packer.UART_Mark;
  34          unsigned char CIndex = 0;
  35          bit     IsRxTimeOut =0; 
  36          bit     IsRxTimeOutTimer3 =0;   
  37          bit IsRxCommand=0;
  38          sbit ss  = P1^2;
  39          sbit Switch = P0^2;
  40          sbit LED    = P0^3;
  41          bit CasseteSEL = 1;
  42          
  43          //====test
  44          void Putchar(unsigned char cData);
  45          
  46          //-----------------------------------------------------------------------------
  47          // Global Variables
  48          //-----------------------------------------------------------------------------
  49          
  50          #define UART_BUFFERSIZE 80
  51          unsigned char TX_Ready =1;
  52          static char Byte;
  53          xdata unsigned int RevTemp=0;
  54          xdata ECasseteNum Tablet;
  55          unsigned char CASInfoTage = 0;
C51 COMPILER V9.51   STATION                                                               09/08/2018 12:31:38 PAGE 2   

  56          unsigned char Finish = 0,Fail = 0;
  57          unsigned char CassetCount=0;
  58          unsigned char address = 0;
  59          bit IsDrugTimeOut = 0;
  60          
  61          unsigned char UART1_Debug[20];
  62          unsigned char STX = 2;
  63          unsigned char ETX = 3;
  64          void UART1_Init (void){
  65   1              SBRLL1    = 0x8F;
  66   1          SBRLH1    = 0xFD;
  67   1          SCON1     = 0x10;           
  68   1          SMOD1     = 0x0c;
  69   1          SBCON1    = 0x43;  
  70   1              EIE2 = 0x02;//開啟UART1中斷
  71   1              //EIP2 = 0x02;//提高UART1中斷優先權
  72   1      }
  73          //-----------------------------------------------------------------------------
  74          void Timer2_Init(){
  75   1              TMR2CN = 0x00;
  76   1              TMR2L  = 0x00;
  77   1              TMR2H  = 0x00;
  78   1          ET2    = 1;
  79   1      }
  80          void Timer3_Init(){
  81   1              TMR3CN = 0x00;
  82   1              TMR3L  = 0xFF;
  83   1              TMR3H  = 0xFF;
  84   1          EIE1  |= 0x80;
  85   1      }
  86          void Putchar(unsigned char cData)
  87          {
  88   1              unsigned int i=10000;
  89   1              while( TX_Ready == 0) ;
  90   1              TX_Ready = 0;
  91   1              SBUF0 = cData;
  92   1              while(i--);     
  93   1      }
  94          void UART1_Putchar(unsigned char cData)
  95          {
  96   1              unsigned int i=10000;
  97   1              while( (SCON1 & 0x20) ==0) ;
  98   1              SBUF1 = cData;
  99   1              while(i--);     
 100   1      }
 101          
 102          void Init_Device(void)
 103          {
 104   1              PCA0MD &= ~0x40; 
 105   1              PORT_Init();                        // Initialize Port I/O
 106   1          SYSCLK_Init ();                     // Initialize Oscillator
 107   1          UART0_Init();
 108   1              UART1_Init();
 109   1              Timer2_Init();
 110   1              Timer3_Init();
 111   1      }
 112          int DropLimit = 0;
 113          unsigned char CasetBCC = 0x00;
 114          void main (void)
 115          {
 116   1              Init_Device();
 117   1              Packer.UART_Mark = UART_Mark;
C51 COMPILER V9.51   STATION                                                               09/08/2018 12:31:38 PAGE 3   

 118   1              Packer.Cast_Mark = UART_Mark;
 119   1              ss = 1;
 120   1              LED = 1;                                       // enable)
 121   1          EA = 1;
 122   1      
 123   1              while(1)
 124   1              {
 125   2      //              Putchar(TabletCommand_Return);
 126   2                      if(Packer.Tablet.Command != TabletCommand_Idel)
 127   2                      {
 128   3                              AccessTablet(Packer.Tablet.Command);//send Command;
 129   3                              Delay(12500);
 130   3                              Finish = 0;Fail = 0;
 131   3                              Packer.Tablet.State = TabletState_Busy;
 132   3                              while((Finish + Fail) < CassetCount) //&& !IsDrugTimeOut)//wait return; 
 133   3                              {
 134   4                                      for(address = 0;address < CassetCount; address++)
 135   4                                      {
 136   5                                              if(Packer.CasseteInfo[address].State == TabletState_Sucess)
 137   5                                                      continue;
 138   5                                              Packer.Tablet.State = TabletState_Busy;
 139   5                                              Putchar(UART_Mark) ;
 140   5                                              Putchar(TabletCommand_Return);
 141   5                                              CasetBCC = TabletCommand_Return;
 142   5                                              Putchar(Packer.CasseteInfo[address].HNumber);
 143   5                                              CasetBCC ^= Packer.CasseteInfo[address].HNumber;
 144   5                                              Putchar(Packer.CasseteInfo[address].TNumber);
 145   5                                              CasetBCC ^= Packer.CasseteInfo[address].TNumber;
 146   5                                              Putchar(Packer.CasseteInfo[address].SNumber);
 147   5                                              CasetBCC ^= Packer.CasseteInfo[address].SNumber;
 148   5                                              Putchar(ETX);
 149   5                                              CasetBCC ^= ETX;
 150   5                                              Putchar(CasetBCC);
 151   5                                              Delay(1000);
 152   5                                              Packer.CasseteInfo[address].State =Packer.Tablet.State;// TbltState;//Packer.Tablet.State;
 153   5                              
 154   5                                              if(Packer.CasseteInfo[address].State == TabletState_Sucess)
 155   5                                                      Finish ++;      
 156   5                                              else if(Packer.CasseteInfo[address].State == TabletState_Fail)  
 157   5                                                      Fail ++;
 158   5                                              else
 159   5                                                      Packer.CasseteInfo[address].State = TabletState_Busy;
 160   5                                      }
 161   4                                      DropLimit++;
 162   4                                      if(DropLimit > 0x0100)
 163   4                                              break;
 164   4                              }                       
 165   3                              if(Finish == CassetCount)
 166   3                              {
 167   4                                      Packer.Station.State = StationState_Finish;
 168   4                                      Packer.Tablet.Command = TabletCommand_Idel;
 169   4                              }
 170   3                              else //if(IsDrugTimeOut)
 171   3                              {
 172   4                                      for(address = 0;address < CassetCount; address++)
 173   4                                      {
 174   5                                              if(Packer.CasseteInfo[address].State == TabletState_Busy)
 175   5                                                      Packer.CasseteInfo[address].State = TabletState_Fail;
 176   5                                      }
 177   4                                      Packer.Tablet.Command = TabletCommand_PackStop;
 178   4                                      Packer.Station.State = StationState_Error;
 179   4                              }
C51 COMPILER V9.51   STATION                                                               09/08/2018 12:31:38 PAGE 4   

 180   3                              DropLimit = 0;
 181   3                              
 182   3                      }
 183   2              }
 184   1      }
 185          //----------------------------------------------------------------------------------
 186          
 187          void AccessTablet(ETabletCommand Command)
 188          {
 189   1              unsigned int i=0;
 190   1              Packer.Tablet.CasseteNum = 0x01;                                         
 191   1              for(i = 0;i<CassetCount;i++){
 192   2      
 193   2                      Putchar(UART_Mark) ;
 194   2      
 195   2                      Putchar(Command);       
 196   2                      CasetBCC = Command;
 197   2                      Putchar(Packer.CasseteInfo[i].HNumber);
 198   2                      CasetBCC ^= Packer.CasseteInfo[i].HNumber;
 199   2                      Putchar(Packer.CasseteInfo[i].TNumber);
 200   2                      CasetBCC ^= Packer.CasseteInfo[i].TNumber;
 201   2                      Putchar(Packer.CasseteInfo[i].SNumber);
 202   2                      CasetBCC ^= Packer.CasseteInfo[i].SNumber;
 203   2                      Putchar(Packer.CasseteInfo[i].QTYTNum);
 204   2                      CasetBCC ^= Packer.CasseteInfo[i].QTYTNum;
 205   2                      Putchar(Packer.CasseteInfo[i].QTYSNum);
 206   2                      CasetBCC ^= Packer.CasseteInfo[i].QTYSNum;
 207   2                      Putchar(ETX);
 208   2                      CasetBCC ^= ETX;
 209   2                      Putchar(CasetBCC);
 210   2                      Packer.CasseteInfo[i].State = TabletState_Busy;
 211   2              }       
 212   1      
 213   1              IsRxCommand =0;
 214   1              /*
 215   1              while(!IsRxCommand) 
 216   1              {
 217   1                      if (i++ >= 12000)       
 218   1                      {
 219   1                              i=0;
 220   1                              Pointer_Packer = &Packer.UART_Mark;
 221   1                              Packer.UART_Mark = UART_NoMark ;
 222   1                              return;
 223   1                      }
 224   1              }*/
 225   1              Pointer_Packer = &Packer.UART_Mark ;
 226   1              
 227   1      }
 228          void Delay(float time)
 229          {
 230   1      
 231   1              while(time --);
 232   1      
 233   1      }
 234          //-----------------------------------------------------------------------------
 235          
 236          void PORT_Init (void)
 237          {
 238   1         P0MDOUT |= 0x10;                    // Enable UTX as push-pull output
 239   1         XBR0     = 0x01;                    // Enable UART on P0.4(TX) and P0.5(RX)
 240   1         XBR1     = 0x40;                    // Enable crossbar and weak pull-ups
 241   1         XBR2     = 0x01;
C51 COMPILER V9.51   STATION                                                               09/08/2018 12:31:38 PAGE 5   

 242   1      }
 243          //-----------------------------------------------------------------------------
 244          
 245          void SYSCLK_Init (void)
 246          {
 247   1         OSCICN |= 0x03;                     // Configure internal oscillator for
 248   1                                             // its maximum frequency
 249   1         RSTSRC  = 0x04;                     // Enable missing clock detector
 250   1      }
 251          
 252          void UART0_Init (void)
 253          {
 254   1         SCON0 = 0x10;                       // SCON0: 8-bit variable bit rate
 255   1                                             //        level of STOP bit is ignored
 256   1                                             //        RX enabled
 257   1                                             //        ninth bits are zeros
 258   1         TH1 = -(SYSCLK/BAUDRATE/2/4);
 259   1         CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 01
 260   1         CKCON |=  0x01;
 261   1      
 262   1         TL1 = TH1;                          // init Timer1
 263   1         TMOD &= ~0xf0;                      // TMOD: timer 1 in 8-bit autoreload
 264   1         TMOD |=  0x20;
 265   1         TR1 = 1;                            // START Timer1
 266   1         TX_Ready = 1;                       // Flag showing that UART can transmit
 267   1         IP |= 0x10;                         // Make UART high priority
 268   1         ES0 = 1;                            // Enable UART0 interrupts
 269   1      
 270   1      }
 271          
 272          //-----------------------------------------------------------------------------
 273          void Timer2_ISR (void) interrupt INTERRUPT_TIMER2 
 274          {
 275   1              TF2H=0;
 276   1              if (RxTimeOutCount ++ >=3)
 277   1              {
 278   2                      TR2 =0;
 279   2                      TMR2H = 0x00;
 280   2                      TMR2L = 0x00;
 281   2                      RxTimeOutCount=0;
 282   2                      Pointer_Packer =&Packer.Station.Command;
 283   2                      IsRxTimeOut =1;
 284   2              }
 285   1      }
 286          //-----------------------------------------------------------------------------
 287          
 288          void CommandANAY()
 289          {       
 290   1              unsigned char cstnp = 0;
 291   1              CassetCount = 0;
 292   1              for(cstnp = 1;cstnp < CIndex;cstnp+=5 )
 293   1              {
 294   2                      Tablet.HNumber = Packer.RecevieData[cstnp];
 295   2                      Tablet.TNumber = Packer.RecevieData[cstnp+1];
 296   2                      Tablet.SNumber = Packer.RecevieData[cstnp+2];
 297   2                      Tablet.QTYTNum = Packer.RecevieData[cstnp+3];
 298   2                      Tablet.QTYSNum = Packer.RecevieData[cstnp+4];
 299   2                      RevTemp = (Tablet.HNumber & 0x0F) * 100 +
 300   2                                        (Tablet.TNumber & 0x0F) *  10 +
 301   2                                        (Tablet.SNumber & 0x0F) ;
 302   2                      if((RevTemp / 20) == P4 || RevTemp >= 100)
 303   2                      {
C51 COMPILER V9.51   STATION                                                               09/08/2018 12:31:38 PAGE 6   

 304   3                              Packer.CasseteInfo[CassetCount].HNumber =  Tablet.HNumber;
 305   3                              Packer.CasseteInfo[CassetCount].TNumber =  Tablet.TNumber;
 306   3                              Packer.CasseteInfo[CassetCount].SNumber =  Tablet.SNumber;
 307   3                              Packer.CasseteInfo[CassetCount].QTYTNum =  Tablet.QTYTNum;
 308   3                              Packer.CasseteInfo[CassetCount].QTYSNum =  Tablet.QTYSNum;
 309   3                              Packer.CasseteInfo[CassetCount].State = TabletState_Busy;
 310   3                              CassetCount++;
 311   3                      }
 312   2      
 313   2              }
 314   1      }
 315          
 316          void RunCommand()
 317          {
 318   1              unsigned char cstnp=0;  
 319   1      
 320   1              if(Packer.RecevieData[0] == EStationCommand_Return)
 321   1              {
 322   2                      for(cstnp = 0;cstnp<CassetCount;cstnp++)
 323   2                      {
 324   3                              if(Packer.CasseteInfo[cstnp].HNumber ==  Packer.RecevieData[1] &&
 325   3                                 Packer.CasseteInfo[cstnp].TNumber ==  Packer.RecevieData[2] &&
 326   3                              Packer.CasseteInfo[cstnp].SNumber ==  Packer.RecevieData[3] )
 327   3                              {
 328   4                                      UART1_Putchar(UART_Mark);
 329   4                                      UART1_Putchar(Packer.CasseteInfo[cstnp].State);
 330   4                              }
 331   3                      }
 332   2              }
 333   1              else if(Packer.RecevieData[0] != EStationCommand_Idel)
 334   1              {
 335   2                      CommandANAY();
 336   2                      if(CassetCount == 0)
 337   2                              return;
 338   2                      Packer.Station.Command = Packer.RecevieData[0];
 339   2                      Packer.Tablet.Command = Packer.RecevieData[0];
 340   2                      Packer.Station.State =  StationState_Busy;
 341   2              }
 342   1      
 343   1      }
 344          byte BCCTemp,BCC,Debug_Index =0;
 345          void UART1_ISR(void)   interrupt 16 //接收BOARD的資料
 346          {
 347   1              EIE2 &= ~0x02;
 348   1              if (SCON1 & 0x02)               // TI1
 349   1              {
 350   2                      SCON1 &= (~0x02);
 351   2              }
 352   1      
 353   1              if (SCON1 & 0x01)               // RI1
 354   1              {
 355   2                      SCON1 &= (~0x01);
 356   2                      *(Pointer_Packer) = SBUF1;
 357   2                      UART1_Debug[Debug_Index] = SBUF1;
 358   2                      if(++Debug_Index >= 20)
 359   2                              Debug_Index=0;
 360   2                      BCCTemp ^= SBUF1;
 361   2                      if(Pointer_Packer == &Packer.UART_Mark)
 362   2                      {
 363   3                              if (Packer.UART_Mark == UART_Mark)
 364   3                              {
 365   4                                      Packer.UART_Mark = UART_NoMark ;
C51 COMPILER V9.51   STATION                                                               09/08/2018 12:31:38 PAGE 7   

 366   4                                      Pointer_Packer = &Packer.RecevieData[CIndex];
 367   4                              }
 368   3                              else
 369   3                              {       
 370   4                                      Pointer_Packer = &Packer.UART_Mark;
 371   4                              }
 372   3                      }
 373   2                      else if(Pointer_Packer == &Packer.RecevieData[CIndex])
 374   2                      {
 375   3                              if(CIndex == 0)
 376   3                                      BCCTemp = SBUF1;
 377   3                              if(Packer.RecevieData[CIndex] == ETX)
 378   3                              {       
 379   4                                      Pointer_Packer = &Packer.Station.BCC;
 380   4                                      BCC = BCCTemp;                                          
 381   4                              }
 382   3                              else
 383   3                              {
 384   4                                      CIndex++;
 385   4                                      Pointer_Packer = &Packer.RecevieData[CIndex];
 386   4                                      
 387   4                              }
 388   3                      }
 389   2                      else if(Pointer_Packer == &Packer.Station.BCC)  
 390   2                      {
 391   3                              Pointer_Packer = &Packer.UART_Mark;
 392   3                              
 393   3                              if(BCC ==Packer.Station.BCC )
 394   3                                      RunCommand();
 395   3                              CIndex = 0;
 396   3                      }
 397   2                      else 
 398   2                      {       
 399   3                              Pointer_Packer = &Packer.UART_Mark;
 400   3                      }               
 401   2              }
 402   1              EIE2 |= 0x02;
 403   1      }
 404          
 405          //-----------------------------------------------------------------------------
 406          void Timer3_ISR (void) interrupt INTERRUPT_TIMER3 
 407          {
 408   1              TMR3CN &= 0x7F;
 409   1              if (RxTimeOutCountTimer3 ++ >=200)
 410   1              {
 411   2                      TMR3CN &= 0xFB;
 412   2                      TMR3H = 0xFF;
 413   2                      TMR3L = 0xFF;
 414   2                      RxTimeOutCountTimer3 = 0;
 415   2                      IsDrugTimeOut =1;
 416   2              }
 417   1      }
 418          //----------------------------------------------------------------------------
 419          void CassetMessageRev()
 420          {
 421   1              Packer.Tablet.State = Packer.CassetRev[0];
 422   1      }
 423          unsigned char BCC = 0x00,CassetIndex = 0x00;
 424          void UART0_Interrupt (void) interrupt 4  //接收CASSETE的資料
 425          {
 426   1         if (TI0 == 1)                   // Check if transmit flag is set
 427   1         {
C51 COMPILER V9.51   STATION                                                               09/08/2018 12:31:38 PAGE 8   

 428   2            TI0 = 0;                           // Clear interrupt flag
 429   2            TX_Ready = 1;                    // Indicate transmission complete
 430   2      
 431   2         }
 432   1         else if (RI0 == 1 )
 433   1         {
 434   2                  RI0 = 0;                           // Clear interrupt flag
 435   2                      *(CasetPointer_Packer) = SBUF0;
 436   2                      if (CasetPointer_Packer == &Packer.Cast_Mark)
 437   2                      {
 438   3                              if (Packer.Cast_Mark == UART_Mark)
 439   3                              {
 440   4                                      Packer.Cast_Mark = UART_NoMark ;
 441   4                                      CasetPointer_Packer = &Packer.CassetRev[CassetIndex];// &Packer.Tablet.State;
 442   4                              }
 443   3                              else
 444   3                              {       
 445   4                                      CassetIndex = 0;
 446   4                                      CasetPointer_Packer = &Packer.Cast_Mark;
 447   4                              }
 448   3                      }       
 449   2                      else if (CasetPointer_Packer == &Packer.CassetRev[CassetIndex])
 450   2                      {                                       
 451   3                              if(Packer.CassetRev[CassetIndex] == ETX)
 452   3                              {       
 453   4                                      CasetPointer_Packer = &Packer.Cast_Mark;                        
 454   4                                      CassetMessageRev();
 455   4                                      CassetIndex = 0;                                                        
 456   4                              }
 457   3                              else
 458   3                              {
 459   4                                      CassetIndex++;
 460   4                                      CasetPointer_Packer = &Packer.CassetRev[CassetIndex];
 461   4                                      
 462   4                              }       
 463   3                              
 464   3                      }
 465   2                      else 
 466   2                      {
 467   3                              CassetIndex = 0;
 468   3                              CasetPointer_Packer = &Packer.Cast_Mark;
 469   3                      }
 470   2                      
 471   2         }
 472   1      }
 473          
 474          //-----------------------------------------------------------------------------
 475          // End Of File
 476          //-----------------------------------------------------------------------------


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1945    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    124    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     45       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
